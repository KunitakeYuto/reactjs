{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nconst initial = {\n  message: \"START\",\n  count: 0\n};\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        message: \"INCREMENT\",\n        count: state.count + 1\n      };\n\n    case \"DECREMENT\":\n      return {\n        message: \"DECREMENT\",\n        count: state.count - 1\n      };\n\n    case \"RESET\":\n      return {\n        message: \"RESET\",\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} //redux-store関係\n\n\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["C:/Users/pc/Documents/GitHub/reactjs/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","count","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,OADG;AAEZC,EAAAA,KAAK,EAAE;AAFK,CAAhB;;AAKA,SAASC,cAAT,CAAwBC,KAAK,GAAGJ,OAAhC,EAAyCK,MAAzC,EAAiD;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AACHL,QAAAA,OAAO,EAAE,WADN;AAEHC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO;AACHD,QAAAA,OAAO,EAAE,WADN;AAEHC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO;AACHD,QAAAA,OAAO,EAAE,OADN;AAEHC,QAAAA,KAAK,EAAEF,OAAO,CAACE;AAFZ,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAjBR;AAmBH,C,CAED;;;AACA,OAAO,SAASG,SAAT,CAAmBH,KAAK,GAAGJ,OAA3B,EAAoC;AACvC,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EAAwBN,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst initial = {\r\n    message: \"START\",\r\n    count: 0\r\n}\r\n\r\nfunction counterReducer(state = initial, action) {\r\n    switch (action.type) {\r\n        case \"INCREMENT\":\r\n            return {\r\n                message: \"INCREMENT\",\r\n                count: state.count + 1\r\n            };\r\n        case \"DECREMENT\":\r\n            return {\r\n                message: \"DECREMENT\",\r\n                count: state.count - 1\r\n            };\r\n        case \"RESET\":\r\n            return {\r\n                message: \"RESET\",\r\n                count: initial.count,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//redux-store関係\r\nexport function initStore(state = initial) {\r\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}