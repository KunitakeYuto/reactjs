{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nvar initial = {\n  message: \"START\",\n  data: [],\n  number: []\n};\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        message: \"INCREMENT\",\n        count: state.count + 1\n      };\n\n    case \"DECREMENT\":\n      return {\n        message: \"DECREMENT\",\n        count: state.count - 1\n      };\n\n    case \"RESET\":\n      return {\n        message: \"RESET\",\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} //redux-store関係\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["C:/Users/pc/Documents/GitHub/reactjs/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","counterReducer","state","action","type","count","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,OADG;AAEZC,EAAAA,IAAI,EAAE,EAFM;AAGZC,EAAAA,MAAM,EAAE;AAHI,CAAhB;;AAMA,SAASC,cAAT,GAAiD;AAAA,MAAzBC,KAAyB,uEAAjBL,OAAiB;AAAA,MAARM,MAAQ;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AACHN,QAAAA,OAAO,EAAE,WADN;AAEHO,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO;AACHP,QAAAA,OAAO,EAAE,WADN;AAEHO,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAFlB,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO;AACHP,QAAAA,OAAO,EAAE,OADN;AAEHO,QAAAA,KAAK,EAAER,OAAO,CAACQ;AAFZ,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAjBR;AAmBH,C,CAED;;;AACA,OAAO,SAASI,SAAT,GAAoC;AAAA,MAAjBJ,KAAiB,uEAATL,OAAS;AACvC,SAAOH,WAAW,CAACO,cAAD,EAAiBC,KAAjB,EAAwBP,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst initial = {\r\n    message: \"START\",\r\n    data: [],\r\n    number: [],\r\n}\r\n\r\nfunction counterReducer(state = initial, action) {\r\n    switch (action.type) {\r\n        case \"INCREMENT\":\r\n            return {\r\n                message: \"INCREMENT\",\r\n                count: state.count + 1\r\n            };\r\n        case \"DECREMENT\":\r\n            return {\r\n                message: \"DECREMENT\",\r\n                count: state.count - 1\r\n            };\r\n        case \"RESET\":\r\n            return {\r\n                message: \"RESET\",\r\n                count: initial.count,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//redux-store関係\r\nexport function initStore(state = initial) {\r\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}