{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Documents\\\\GitHub\\\\reactjs\\\\next_app\\\\components\\\\Counter.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nvar Counter = /*#__PURE__*/function (_Component) {\n  _inherits(Counter, _Component);\n\n  var _super = _createSuper(Counter);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    _this.reset = _this.reset.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"doAction\",\n    value: function doAction(e) {\n      if (e.shiftKey) {\n        return this.props.dispatch({\n          type: \"DECREMENT\"\n        });\n      } else {\n        return this.props.dispatch({\n          type: \"INCREMENT\"\n        });\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      return this.props.dispatch({\n        type: \"RESET\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.props.message, \":\", this.props.count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: this.style,\n          onClick: this.doAction,\n          children: \"Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: this.style,\n          onClick: this.reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nCounter = connect(function (state) {\n  return state;\n})(Counter);\nexport default Counter;","map":{"version":3,"sources":["C:/Users/pc/Documents/GitHub/reactjs/next_app/components/Counter.js"],"names":["React","Component","connect","Counter","props","fontSize","padding","doAction","bind","reset","e","shiftKey","dispatch","type","message","count","style","state"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,O;;;;;AAMF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,4DALX;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAKW;;AAEf,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWD,IAAX,+BAAb;AAHe;AAIlB;;;;6BAEQE,C,EAAG;AACR,UAAIA,CAAC,CAACC,QAAN,EAAgB;AACZ,eAAO,KAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAApB,CAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAApB,CAAP;AACH;AACJ;;;4BAEO;AACJ,aAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,CAAP;AACH;;;6BAEQ;AACL,0BACI;AAAA,gCACI;AAAA,qBAAI,KAAKT,KAAL,CAAWU,OAAf,OAAyB,KAAKV,KAAL,CAAWW,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAE,KAAKC,KAApB;AAA2B,UAAA,OAAO,EAAE,KAAKT,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,KAAK,EAAE,KAAKS,KAApB;AAA2B,UAAA,OAAO,EAAE,KAAKP,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;;;;EAhCiBR,S;;AAmCtBE,OAAO,GAAGD,OAAO,CAAC,UAACe,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAP,CAA0Bd,OAA1B,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Counter extends Component {\r\n    style = {\r\n        fontSize: \"12pt\",\r\n        padding: \"5px 15px\",\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.doAction = this.doAction.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n\r\n    doAction(e) {\r\n        if (e.shiftKey) {\r\n            return this.props.dispatch({ type: \"DECREMENT\" });\r\n        } else {\r\n            return this.props.dispatch({ type: \"INCREMENT\" });\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        return this.props.dispatch({ type: \"RESET\" });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{this.props.message}:{this.props.count}</p>\r\n                <button style={this.style} onClick={this.doAction}>Count</button>\r\n                <button style={this.style} onClick={this.reset}>Reset</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCounter = connect((state) => state)(Counter);\r\nexport default Counter;\r\n\r\n"]},"metadata":{},"sourceType":"module"}