{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nvar initial = {\n  message: \"START\",\n  data: [],\n  number: [],\n  result: 0\n}; //レデューサー\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //計算\n    case \"ENTER\":\n      var data2 = state.data.slice();\n      var s = action.value;\n      data2.unshift(s);\n      var num = s.replace(/[^0-9]/g, \"\");\n      var number2 = state.number.slice();\n      number2.unshift(num);\n      var result = state.result * 1 + num * 1;\n      return {\n        message: \"ENTER\",\n        data: data2,\n        number: number2,\n        result: result\n      };\n    //reset\n\n    case \"RESET\":\n      return {\n        message: \"RESET\",\n        data: [],\n        number: [],\n        result: 0\n      };\n\n    default:\n      return state;\n  }\n} //redux-store関係\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["C:/Users/pc/Documents/GitHub/reactjs/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","counterReducer","state","action","type","data2","slice","s","value","unshift","num","replace","number2","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,OADG;AAEZC,EAAAA,IAAI,EAAE,EAFM;AAGZC,EAAAA,MAAM,EAAE,EAHI;AAIZC,EAAAA,MAAM,EAAE;AAJI,CAAhB,C,CAOA;;AACA,SAASC,cAAT,GAAiD;AAAA,MAAzBC,KAAyB,uEAAjBN,OAAiB;AAAA,MAARO,MAAQ;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,OAAL;AACI,UAAIC,KAAK,GAAGH,KAAK,CAACJ,IAAN,CAAWQ,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AACA,UAAIG,GAAG,GAAGH,CAAC,CAACI,OAAF,CAAU,SAAV,EAAqB,EAArB,CAAV;AACA,UAAIC,OAAO,GAAGV,KAAK,CAACH,MAAN,CAAaO,KAAb,EAAd;AACAM,MAAAA,OAAO,CAACH,OAAR,CAAgBC,GAAhB;AACA,UAAIV,MAAM,GAAIE,KAAK,CAACF,MAAN,GAAe,CAAhB,GAAsBU,GAAG,GAAG,CAAzC;AACA,aAAO;AACHb,QAAAA,OAAO,EAAE,OADN;AAEHC,QAAAA,IAAI,EAAEO,KAFH;AAGHN,QAAAA,MAAM,EAAEa,OAHL;AAIHZ,QAAAA,MAAM,EAAEA;AAJL,OAAP;AAOJ;;AACA,SAAK,OAAL;AACI,aAAO;AACHH,QAAAA,OAAO,EAAE,OADN;AAEHC,QAAAA,IAAI,EAAE,EAFH;AAGHC,QAAAA,MAAM,EAAE,EAHL;AAIHC,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAMJ;AACI,aAAOE,KAAP;AA1BR;AA4BH,C,CAED;;;AACA,OAAO,SAASW,SAAT,GAAoC;AAAA,MAAjBX,KAAiB,uEAATN,OAAS;AACvC,SAAOH,WAAW,CAACQ,cAAD,EAAiBC,KAAjB,EAAwBR,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst initial = {\r\n    message: \"START\",\r\n    data: [],\r\n    number: [],\r\n    result: 0\r\n}\r\n\r\n//レデューサー\r\nfunction counterReducer(state = initial, action) {\r\n    switch (action.type) {\r\n        //計算\r\n        case \"ENTER\":\r\n            let data2 = state.data.slice();\r\n            let s = action.value;\r\n            data2.unshift(s);\r\n            let num = s.replace(/[^0-9]/g, \"\");\r\n            let number2 = state.number.slice();\r\n            number2.unshift(num);\r\n            let result = (state.result * 1) + (num * 1);\r\n            return {\r\n                message: \"ENTER\",\r\n                data: data2,\r\n                number: number2,\r\n                result: result,\r\n            };\r\n\r\n        //reset\r\n        case \"RESET\":\r\n            return {\r\n                message: \"RESET\",\r\n                data: [],\r\n                number: [],\r\n                result: 0,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//redux-store関係\r\nexport function initStore(state = initial) {\r\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}