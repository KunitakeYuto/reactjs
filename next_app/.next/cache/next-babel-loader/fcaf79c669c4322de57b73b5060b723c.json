{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nconst initial = {\n  message: \"START\",\n  data: [],\n  number: [],\n  result: 0\n}; //レデューサー\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    //計算\n    case \"ENTER\":\n      let data2 = state.data.slice();\n      let s = action.value;\n      data2.unshift(s);\n      let num = s.replace(/[^0-9]/g, \"\");\n      let number2 = state.number.slice();\n      number2.unshift(num);\n\n    case \"RESET\":\n      return {\n        message: \"RESET\",\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} //redux-store関係\n\n\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["C:/Users/pc/Documents/GitHub/reactjs/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","counterReducer","state","action","type","data2","slice","s","value","unshift","num","replace","number2","count","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,OADG;AAEZC,EAAAA,IAAI,EAAE,EAFM;AAGZC,EAAAA,MAAM,EAAE,EAHI;AAIZC,EAAAA,MAAM,EAAE;AAJI,CAAhB,C,CAOA;;AACA,SAASC,cAAT,CAAwBC,KAAK,GAAGN,OAAhC,EAAyCO,MAAzC,EAAiD;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,OAAL;AACI,UAAIC,KAAK,GAAGH,KAAK,CAACJ,IAAN,CAAWQ,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AACA,UAAIG,GAAG,GAAGH,CAAC,CAACI,OAAF,CAAU,SAAV,EAAqB,EAArB,CAAV;AACA,UAAIC,OAAO,GAAGV,KAAK,CAACH,MAAN,CAAaO,KAAb,EAAd;AACAM,MAAAA,OAAO,CAACH,OAAR,CAAgBC,GAAhB;;AAIJ,SAAK,OAAL;AACI,aAAO;AACHb,QAAAA,OAAO,EAAE,OADN;AAEHgB,QAAAA,KAAK,EAAEjB,OAAO,CAACiB;AAFZ,OAAP;;AAIJ;AACI,aAAOX,KAAP;AAlBR;AAoBH,C,CAED;;;AACA,OAAO,SAASY,SAAT,CAAmBZ,KAAK,GAAGN,OAA3B,EAAoC;AACvC,SAAOH,WAAW,CAACQ,cAAD,EAAiBC,KAAjB,EAAwBR,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst initial = {\r\n    message: \"START\",\r\n    data: [],\r\n    number: [],\r\n    result: 0\r\n}\r\n\r\n//レデューサー\r\nfunction counterReducer(state = initial, action) {\r\n    switch (action.type) {\r\n        //計算\r\n        case \"ENTER\":\r\n            let data2 = state.data.slice();\r\n            let s = action.value;\r\n            data2.unshift(s);\r\n            let num = s.replace(/[^0-9]/g, \"\");\r\n            let number2 = state.number.slice();\r\n            number2.unshift(num);\r\n\r\n\r\n\r\n        case \"RESET\":\r\n            return {\r\n                message: \"RESET\",\r\n                count: initial.count,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//redux-store関係\r\nexport function initStore(state = initial) {\r\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}